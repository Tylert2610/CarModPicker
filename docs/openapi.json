{
  "openapi": "3.1.0",
  "info": {
    "title": "CarModPicker",
    "version": "0.1.0"
  },
  "paths": {
    "/api/users/me": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Read Users Me Route",
        "description": "Fetch the current logged in user.",
        "operationId": "read_users_me_route_api_users_me_get",
        "parameters": [
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create User",
        "description": "Creates a new user in the database.",
        "operationId": "create_user_api_users__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "400": {
            "description": "User already exists"
          },
          "403": {
            "description": "Not authorized to create a user"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{user_id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Read User",
        "operationId": "read_user_api_users__user_id__get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "403": {
            "description": "Not authorized to access this user"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Update User",
        "operationId": "update_user_api_users__user_id__put",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "403": {
            "description": "Not authorized to update this user"
          },
          "400": {
            "description": "Invalid input, e.g., username or email already registered"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete User",
        "operationId": "delete_user_api_users__user_id__delete",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "403": {
            "description": "Not authorized to delete this user"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/admin/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get All Users",
        "description": "Get all users (admin only).",
        "operationId": "get_all_users_api_users_admin_users_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of users to skip",
              "default": 0,
              "title": "Skip"
            },
            "description": "Number of users to skip"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "Maximum number of users to return",
              "default": 100,
              "title": "Limit"
            },
            "description": "Maximum number of users to return"
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserRead"
                  },
                  "title": "Response Get All Users Api Users Admin Users Get"
                }
              }
            }
          },
          "403": {
            "description": "Admin privileges required"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/admin/users/{user_id}": {
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Admin Update User",
        "description": "Update a user with admin privileges (admin only).",
        "operationId": "admin_update_user_api_users_admin_users__user_id__put",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminUserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "403": {
            "description": "Admin privileges required"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Admin Delete User",
        "description": "Delete a user with admin privileges (admin only).",
        "operationId": "admin_delete_user_api_users_admin_users__user_id__delete",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "403": {
            "description": "Admin privileges required"
          },
          "400": {
            "description": "Cannot delete yourself"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/cars/": {
      "post": {
        "tags": [
          "cars"
        ],
        "summary": "Create Car",
        "operationId": "create_car_api_cars__post",
        "parameters": [
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CarCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CarRead"
                }
              }
            }
          },
          "400": {
            "description": "Car already exists"
          },
          "403": {
            "description": "Not authorized to create a car"
          },
          "402": {
            "description": "Subscription limit reached"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/cars/{car_id}": {
      "get": {
        "tags": [
          "cars"
        ],
        "summary": "Read Car",
        "operationId": "read_car_api_cars__car_id__get",
        "parameters": [
          {
            "name": "car_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Car Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CarRead"
                }
              }
            }
          },
          "404": {
            "description": "Car not found"
          },
          "403": {
            "description": "Not authorized to access this car"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "cars"
        ],
        "summary": "Update Car",
        "operationId": "update_car_api_cars__car_id__put",
        "parameters": [
          {
            "name": "car_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Car Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CarUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CarRead"
                }
              }
            }
          },
          "404": {
            "description": "Car not found"
          },
          "403": {
            "description": "Not authorized to update this car"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "cars"
        ],
        "summary": "Delete Car",
        "operationId": "delete_car_api_cars__car_id__delete",
        "parameters": [
          {
            "name": "car_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Car Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CarRead"
                }
              }
            }
          },
          "404": {
            "description": "Car not found"
          },
          "403": {
            "description": "Not authorized to delete this car"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/cars/user/{user_id}": {
      "get": {
        "tags": [
          "cars",
          "cars"
        ],
        "summary": "Read Cars By User",
        "description": "Retrieve all cars owned by a specific user with pagination.",
        "operationId": "read_cars_by_user_api_cars_user__user_id__get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of cars to skip",
              "default": 0,
              "title": "Skip"
            },
            "description": "Number of cars to skip"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "Maximum number of cars to return",
              "default": 100,
              "title": "Limit"
            },
            "description": "Maximum number of cars to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CarRead"
                  },
                  "title": "Response Read Cars By User Api Cars User  User Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/build-lists/": {
      "post": {
        "tags": [
          "build_lists"
        ],
        "summary": "Create Build List",
        "operationId": "create_build_list_api_build_lists__post",
        "parameters": [
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildListCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildListRead"
                }
              }
            }
          },
          "400": {
            "description": "Build List already exists"
          },
          "403": {
            "description": "Not authorized to create a build list"
          },
          "402": {
            "description": "Subscription limit reached"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/build-lists/{build_list_id}": {
      "get": {
        "tags": [
          "build_lists"
        ],
        "summary": "Read Build List",
        "operationId": "read_build_list_api_build_lists__build_list_id__get",
        "parameters": [
          {
            "name": "build_list_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Build List Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildListRead"
                }
              }
            }
          },
          "404": {
            "description": "Build List not found"
          },
          "403": {
            "description": "Not authorized to access this build list"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "build_lists"
        ],
        "summary": "Update Build List",
        "operationId": "update_build_list_api_build_lists__build_list_id__put",
        "parameters": [
          {
            "name": "build_list_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Build List Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildListUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildListRead"
                }
              }
            }
          },
          "404": {
            "description": "Build List not found or New Car not found"
          },
          "403": {
            "description": "Not authorized to update this build list or associate it with the new car"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "build_lists"
        ],
        "summary": "Delete Build List",
        "operationId": "delete_build_list_api_build_lists__build_list_id__delete",
        "parameters": [
          {
            "name": "build_list_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Build List Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildListRead"
                }
              }
            }
          },
          "404": {
            "description": "Build List not found"
          },
          "403": {
            "description": "Not authorized to delete this build list"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/build-lists/car/{car_id}": {
      "get": {
        "tags": [
          "build_lists",
          "build_lists"
        ],
        "summary": "Read Build Lists By Car",
        "description": "Retrieve all build lists associated with a specific car with pagination.",
        "operationId": "read_build_lists_by_car_api_build_lists_car__car_id__get",
        "parameters": [
          {
            "name": "car_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Car Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of build lists to skip",
              "default": 0,
              "title": "Skip"
            },
            "description": "Number of build lists to skip"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "Maximum number of build lists to return",
              "default": 100,
              "title": "Limit"
            },
            "description": "Maximum number of build lists to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BuildListRead"
                  },
                  "title": "Response Read Build Lists By Car Api Build Lists Car  Car Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/parts/": {
      "post": {
        "tags": [
          "parts"
        ],
        "summary": "Create Part",
        "description": "Create a new shared part.",
        "operationId": "create_part_api_parts__post",
        "parameters": [
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartRead"
                }
              }
            }
          },
          "400": {
            "description": "Invalid part data"
          },
          "403": {
            "description": "Not authorized to create parts"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "parts"
        ],
        "summary": "Read Parts",
        "description": "Get all parts with optional filtering and search.",
        "operationId": "read_parts_api_parts__get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of parts to skip",
              "default": 0,
              "title": "Skip"
            },
            "description": "Number of parts to skip"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "Maximum number of parts to return",
              "default": 100,
              "title": "Limit"
            },
            "description": "Maximum number of parts to return"
          },
          {
            "name": "category_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by category ID",
              "title": "Category Id"
            },
            "description": "Filter by category ID"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search in part names and descriptions",
              "title": "Search"
            },
            "description": "Search in part names and descriptions"
          }
        ],
        "responses": {
          "200": {
            "description": "List of parts retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PartRead"
                  },
                  "title": "Response Read Parts Api Parts  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/parts/with-votes": {
      "get": {
        "tags": [
          "parts"
        ],
        "summary": "Read Parts With Votes",
        "description": "Get all parts with vote data and optional filtering and search.",
        "operationId": "read_parts_with_votes_api_parts_with_votes_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of parts to skip",
              "default": 0,
              "title": "Skip"
            },
            "description": "Number of parts to skip"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "Maximum number of parts to return",
              "default": 100,
              "title": "Limit"
            },
            "description": "Maximum number of parts to return"
          },
          {
            "name": "category_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by category ID",
              "title": "Category Id"
            },
            "description": "Filter by category ID"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search in part names and descriptions",
              "title": "Search"
            },
            "description": "Search in part names and descriptions"
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of parts with vote data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PartReadWithVotes"
                  },
                  "title": "Response Read Parts With Votes Api Parts With Votes Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/parts/{part_id}": {
      "get": {
        "tags": [
          "parts"
        ],
        "summary": "Read Part",
        "description": "Get a specific part by ID.",
        "operationId": "read_part_api_parts__part_id__get",
        "parameters": [
          {
            "name": "part_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Part Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartRead"
                }
              }
            }
          },
          "404": {
            "description": "Part not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "parts"
        ],
        "summary": "Update Part",
        "description": "Update a part (only creator can update).",
        "operationId": "update_part_api_parts__part_id__put",
        "parameters": [
          {
            "name": "part_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Part Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartRead"
                }
              }
            }
          },
          "404": {
            "description": "Part not found"
          },
          "403": {
            "description": "Not authorized to update this part"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "parts"
        ],
        "summary": "Delete Part",
        "description": "Delete a part (only creator can delete).",
        "operationId": "delete_part_api_parts__part_id__delete",
        "parameters": [
          {
            "name": "part_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Part Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartRead"
                }
              }
            }
          },
          "404": {
            "description": "Part not found"
          },
          "403": {
            "description": "Not authorized to delete this part"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/parts/user/{user_id}": {
      "get": {
        "tags": [
          "parts"
        ],
        "summary": "Read Parts By User",
        "description": "Get all parts created by a specific user.",
        "operationId": "read_parts_by_user_api_parts_user__user_id__get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of parts to skip",
              "default": 0,
              "title": "Skip"
            },
            "description": "Number of parts to skip"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "Maximum number of parts to return",
              "default": 100,
              "title": "Limit"
            },
            "description": "Maximum number of parts to return"
          }
        ],
        "responses": {
          "200": {
            "description": "List of parts created by user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PartRead"
                  },
                  "title": "Response Read Parts By User Api Parts User  User Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/build-list-parts/build-lists/{build_list_id}/parts/{part_id}": {
      "post": {
        "tags": [
          "build_list_parts"
        ],
        "summary": "Add Part To Build List",
        "description": "Add an existing part to a build list.",
        "operationId": "add_part_to_build_list_api_build_list_parts_build_lists__build_list_id__parts__part_id__post",
        "parameters": [
          {
            "name": "build_list_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Build List Id"
            }
          },
          {
            "name": "part_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Part Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildListPartCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildListPartRead"
                }
              }
            }
          },
          "404": {
            "description": "Build list or part not found"
          },
          "403": {
            "description": "Not authorized to add parts to this build list"
          },
          "409": {
            "description": "Part already exists in build list"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "build_list_parts"
        ],
        "summary": "Update Part In Build List",
        "description": "Update a part's notes in a build list.",
        "operationId": "update_part_in_build_list_api_build_list_parts_build_lists__build_list_id__parts__part_id__put",
        "parameters": [
          {
            "name": "build_list_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Build List Id"
            }
          },
          {
            "name": "part_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Part Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildListPartUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildListPartRead"
                }
              }
            }
          },
          "404": {
            "description": "Build list or part relationship not found"
          },
          "403": {
            "description": "Not authorized to modify this build list"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "build_list_parts"
        ],
        "summary": "Remove Part From Build List",
        "description": "Remove a part from a build list.",
        "operationId": "remove_part_from_build_list_api_build_list_parts_build_lists__build_list_id__parts__part_id__delete",
        "parameters": [
          {
            "name": "build_list_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Build List Id"
            }
          },
          {
            "name": "part_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Part Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildListPartRead"
                }
              }
            }
          },
          "404": {
            "description": "Build list or part relationship not found"
          },
          "403": {
            "description": "Not authorized to modify this build list"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/build-list-parts/build-lists/{build_list_id}/parts": {
      "get": {
        "tags": [
          "build_list_parts"
        ],
        "summary": "Get Parts In Build List",
        "description": "Get all parts in a build list.",
        "operationId": "get_parts_in_build_list_api_build_list_parts_build_lists__build_list_id__parts_get",
        "parameters": [
          {
            "name": "build_list_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Build List Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BuildListPartRead"
                  },
                  "title": "Response Get Parts In Build List Api Build List Parts Build Lists  Build List Id  Parts Get"
                }
              }
            }
          },
          "404": {
            "description": "Build list not found"
          },
          "403": {
            "description": "Not authorized to access this build list"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/token": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Login For Access Token",
        "description": "Authenticate user, set JWT token in an HTTP-only cookie, and return user details.\nTakes form data: username and password.",
        "operationId": "login_for_access_token_api_auth_token_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_login_for_access_token_api_auth_token_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/verify-email": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Verify Email",
        "operationId": "verify_email_api_auth_verify_email_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_verify_email_api_auth_verify_email_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Verify Email Api Auth Verify Email Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/verify-email/confirm": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Verify Email Confirm",
        "operationId": "verify_email_confirm_api_auth_verify_email_confirm_get",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/forgot-password": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Reset Password",
        "operationId": "reset_password_api_auth_forgot_password_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_reset_password_api_auth_forgot_password_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Reset Password Api Auth Forgot Password Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/forgot-password/confirm": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Reset Password Confirm",
        "operationId": "reset_password_confirm_api_auth_forgot_password_confirm_post",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPassword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Reset Password Confirm Api Auth Forgot Password Confirm Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Logout",
        "description": "Invalidate the user's session by clearing the access token cookie.",
        "operationId": "logout_api_auth_logout_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Logout Api Auth Logout Post"
                }
              }
            }
          }
        }
      }
    },
    "/api/subscriptions/subscriptions/status": {
      "get": {
        "tags": [
          "subscriptions"
        ],
        "summary": "Get Subscription Status",
        "description": "Get current subscription status and limits for the authenticated user.",
        "operationId": "get_subscription_status_api_subscriptions_subscriptions_status_get",
        "parameters": [
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionStatus"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/subscriptions/subscriptions/upgrade": {
      "post": {
        "tags": [
          "subscriptions"
        ],
        "summary": "Upgrade Subscription",
        "description": "Upgrade user to premium subscription.",
        "operationId": "upgrade_subscription_api_subscriptions_subscriptions_upgrade_post",
        "parameters": [
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpgradeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/subscriptions/subscriptions/cancel": {
      "post": {
        "tags": [
          "subscriptions"
        ],
        "summary": "Cancel Subscription",
        "description": "Cancel premium subscription.",
        "operationId": "cancel_subscription_api_subscriptions_subscriptions_cancel_post",
        "parameters": [
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/subscriptions/subscriptions/limits/check": {
      "get": {
        "tags": [
          "subscriptions"
        ],
        "summary": "Check Creation Limits",
        "description": "Check if user can create a specific resource type.",
        "operationId": "check_creation_limits_api_subscriptions_subscriptions_limits_check_get",
        "parameters": [
          {
            "name": "resource_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Resource Type"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Check Creation Limits Api Subscriptions Subscriptions Limits Check Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/categories/": {
      "get": {
        "tags": [
          "categories"
        ],
        "summary": "Get Categories",
        "description": "Get all active categories.",
        "operationId": "get_categories_api_categories__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryResponse"
                  },
                  "title": "Response Get Categories Api Categories  Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "categories"
        ],
        "summary": "Create Category",
        "description": "Create a new category (admin only).",
        "operationId": "create_category_api_categories__post",
        "parameters": [
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/categories/{category_id}": {
      "get": {
        "tags": [
          "categories"
        ],
        "summary": "Get Category",
        "description": "Get specific category details.",
        "operationId": "get_category_api_categories__category_id__get",
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Category Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "categories"
        ],
        "summary": "Update Category",
        "description": "Update a category (admin only).",
        "operationId": "update_category_api_categories__category_id__put",
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Category Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "categories"
        ],
        "summary": "Delete Category",
        "description": "Delete a category (admin only).",
        "operationId": "delete_category_api_categories__category_id__delete",
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Category Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Delete Category Api Categories  Category Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/categories/{category_id}/parts": {
      "get": {
        "tags": [
          "categories"
        ],
        "summary": "Get Parts By Category",
        "description": "Get parts by category with pagination.",
        "operationId": "get_parts_by_category_api_categories__category_id__parts_get",
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Category Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PartRead"
                  },
                  "title": "Response Get Parts By Category Api Categories  Category Id  Parts Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/part-votes/{part_id}/vote": {
      "post": {
        "tags": [
          "part_votes"
        ],
        "summary": "Vote On Part",
        "description": "Vote on a part (upvote or downvote).",
        "operationId": "vote_on_part_api_part_votes__part_id__vote_post",
        "parameters": [
          {
            "name": "part_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Part Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartVoteCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartVoteRead"
                }
              }
            }
          },
          "400": {
            "description": "Invalid vote data"
          },
          "404": {
            "description": "Part not found"
          },
          "409": {
            "description": "User has already voted on this part"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "part_votes"
        ],
        "summary": "Remove Vote",
        "description": "Remove user's vote on a part.",
        "operationId": "remove_vote_api_part_votes__part_id__vote_delete",
        "parameters": [
          {
            "name": "part_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Part Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Remove Vote Api Part Votes  Part Id  Vote Delete"
                }
              }
            }
          },
          "404": {
            "description": "Part not found or no vote exists"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/part-votes/{part_id}/vote-summary": {
      "get": {
        "tags": [
          "part_votes"
        ],
        "summary": "Get Vote Summary",
        "description": "Get vote summary for a part including user's vote.",
        "operationId": "get_vote_summary_api_part_votes__part_id__vote_summary_get",
        "parameters": [
          {
            "name": "part_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Part Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartVoteSummary"
                }
              }
            }
          },
          "404": {
            "description": "Part not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/part-votes/": {
      "get": {
        "tags": [
          "part_votes"
        ],
        "summary": "Get Vote Summaries",
        "description": "Get vote summaries for multiple parts.",
        "operationId": "get_vote_summaries_api_part_votes__get",
        "parameters": [
          {
            "name": "part_ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Comma-separated list of part IDs",
              "title": "Part Ids"
            },
            "description": "Comma-separated list of part IDs"
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of vote summaries retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PartVoteSummary"
                  },
                  "title": "Response Get Vote Summaries Api Part Votes  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/part-votes/flagged-parts": {
      "get": {
        "tags": [
          "part_votes"
        ],
        "summary": "Get Flagged Parts",
        "description": "Get parts with concerning vote patterns for admin review.",
        "operationId": "get_flagged_parts_api_part_votes_flagged_parts_get",
        "parameters": [
          {
            "name": "threshold",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Minimum vote score to flag (upvotes - downvotes)",
              "default": -10,
              "title": "Threshold"
            },
            "description": "Minimum vote score to flag (upvotes - downvotes)"
          },
          {
            "name": "min_votes",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Minimum total votes required to consider flagging",
              "default": 5,
              "title": "Min Votes"
            },
            "description": "Minimum total votes required to consider flagging"
          },
          {
            "name": "min_downvote_ratio",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "description": "Minimum downvote ratio to flag (0.0-1.0)",
              "default": 0.6,
              "title": "Min Downvote Ratio"
            },
            "description": "Minimum downvote ratio to flag (0.0-1.0)"
          },
          {
            "name": "days_back",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Number of days to look back for recent activity",
              "default": 30,
              "title": "Days Back"
            },
            "description": "Number of days to look back for recent activity"
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of parts to skip",
              "default": 0,
              "title": "Skip"
            },
            "description": "Number of parts to skip"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "Maximum number of parts to return",
              "default": 100,
              "title": "Limit"
            },
            "description": "Maximum number of parts to return"
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FlaggedPartSummary"
                  },
                  "title": "Response Get Flagged Parts Api Part Votes Flagged Parts Get"
                }
              }
            }
          },
          "403": {
            "description": "Admin privileges required"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/part-reports/{part_id}/report": {
      "post": {
        "tags": [
          "part_reports"
        ],
        "summary": "Report Part",
        "description": "Report a part for admin review.",
        "operationId": "report_part_api_part_reports__part_id__report_post",
        "parameters": [
          {
            "name": "part_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Part Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartReportCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartReportRead"
                }
              }
            }
          },
          "400": {
            "description": "Invalid report data"
          },
          "404": {
            "description": "Part not found"
          },
          "409": {
            "description": "User has already reported this part"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/part-reports/reports": {
      "get": {
        "tags": [
          "part_reports"
        ],
        "summary": "Get Reports",
        "description": "Get all reports (admin only).",
        "operationId": "get_reports_api_part_reports_reports_get",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by status",
              "title": "Status"
            },
            "description": "Filter by status"
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of reports to skip",
              "default": 0,
              "title": "Skip"
            },
            "description": "Number of reports to skip"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "Maximum number of reports to return",
              "default": 100,
              "title": "Limit"
            },
            "description": "Maximum number of reports to return"
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PartReportWithDetails"
                  },
                  "title": "Response Get Reports Api Part Reports Reports Get"
                }
              }
            }
          },
          "403": {
            "description": "Admin access required"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/part-reports/reports/{report_id}": {
      "get": {
        "tags": [
          "part_reports"
        ],
        "summary": "Get Report",
        "description": "Get a specific report (admin only).",
        "operationId": "get_report_api_part_reports_reports__report_id__get",
        "parameters": [
          {
            "name": "report_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Report Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartReportWithDetails"
                }
              }
            }
          },
          "403": {
            "description": "Admin access required"
          },
          "404": {
            "description": "Report not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "part_reports"
        ],
        "summary": "Update Report",
        "description": "Update a report status (admin only).",
        "operationId": "update_report_api_part_reports_reports__report_id__put",
        "parameters": [
          {
            "name": "report_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Report Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartReportUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartReportRead"
                }
              }
            }
          },
          "403": {
            "description": "Admin access required"
          },
          "404": {
            "description": "Report not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/part-reports/reports/pending/count": {
      "get": {
        "tags": [
          "part_reports"
        ],
        "summary": "Get Pending Reports Count",
        "description": "Get count of pending reports (admin only).",
        "operationId": "get_pending_reports_count_api_part_reports_reports_pending_count_get",
        "parameters": [
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer"
                  },
                  "title": "Response Get Pending Reports Count Api Part Reports Reports Pending Count Get"
                }
              }
            }
          },
          "403": {
            "description": "Admin access required"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Read Root",
        "operationId": "read_root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Read Root  Get"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health Check",
        "description": "Health check endpoint for monitoring.",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Health Check Health Get"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AdminUserUpdate": {
        "properties": {
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "disabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Disabled"
          },
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password"
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url"
          },
          "is_superuser": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Superuser"
          },
          "is_admin": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Admin"
          },
          "email_verified": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Verified"
          }
        },
        "type": "object",
        "title": "AdminUserUpdate"
      },
      "Body_login_for_access_token_api_auth_token_post": {
        "properties": {
          "grant_type": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^password$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grant Type"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "scope": {
            "type": "string",
            "title": "Scope",
            "default": ""
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "Body_login_for_access_token_api_auth_token_post"
      },
      "Body_reset_password_api_auth_forgot_password_post": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "Body_reset_password_api_auth_forgot_password_post"
      },
      "Body_verify_email_api_auth_verify_email_post": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "Body_verify_email_api_auth_verify_email_post"
      },
      "BuildListCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "car_id": {
            "type": "integer",
            "title": "Car Id"
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url"
          }
        },
        "type": "object",
        "required": [
          "name",
          "car_id"
        ],
        "title": "BuildListCreate"
      },
      "BuildListPartCreate": {
        "properties": {
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "title": "BuildListPartCreate"
      },
      "BuildListPartRead": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "build_list_id": {
            "type": "integer",
            "title": "Build List Id"
          },
          "part_id": {
            "type": "integer",
            "title": "Part Id"
          },
          "added_by": {
            "type": "integer",
            "title": "Added By"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "added_at": {
            "type": "string",
            "format": "date-time",
            "title": "Added At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "build_list_id",
          "part_id",
          "added_by",
          "added_at"
        ],
        "title": "BuildListPartRead"
      },
      "BuildListPartUpdate": {
        "properties": {
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "title": "BuildListPartUpdate"
      },
      "BuildListRead": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "car_id": {
            "type": "integer",
            "title": "Car Id"
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "car_id"
        ],
        "title": "BuildListRead"
      },
      "BuildListUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "car_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Car Id"
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url"
          }
        },
        "type": "object",
        "title": "BuildListUpdate"
      },
      "CarCreate": {
        "properties": {
          "make": {
            "type": "string",
            "title": "Make"
          },
          "model": {
            "type": "string",
            "title": "Model"
          },
          "year": {
            "type": "integer",
            "title": "Year"
          },
          "trim": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trim"
          },
          "vin": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vin"
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url"
          }
        },
        "type": "object",
        "required": [
          "make",
          "model",
          "year"
        ],
        "title": "CarCreate"
      },
      "CarRead": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "make": {
            "type": "string",
            "title": "Make"
          },
          "model": {
            "type": "string",
            "title": "Model"
          },
          "year": {
            "type": "integer",
            "title": "Year"
          },
          "trim": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trim"
          },
          "vin": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vin"
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "make",
          "model",
          "year",
          "user_id"
        ],
        "title": "CarRead"
      },
      "CarUpdate": {
        "properties": {
          "make": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Make"
          },
          "model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model"
          },
          "year": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Year"
          },
          "trim": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trim"
          },
          "vin": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vin"
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url"
          }
        },
        "type": "object",
        "title": "CarUpdate"
      },
      "CategoryCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Unique category name (e.g., 'exhaust', 'suspension')"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name",
            "description": "Human-readable display name (e.g., 'Exhaust Systems')"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Category description"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon",
            "description": "Icon identifier for the category"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Whether the category is active",
            "default": true
          },
          "sort_order": {
            "type": "integer",
            "title": "Sort Order",
            "description": "Sort order for display",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "name",
          "display_name"
        ],
        "title": "CategoryCreate"
      },
      "CategoryResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Unique category name (e.g., 'exhaust', 'suspension')"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name",
            "description": "Human-readable display name (e.g., 'Exhaust Systems')"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Category description"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon",
            "description": "Icon identifier for the category"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Whether the category is active",
            "default": true
          },
          "sort_order": {
            "type": "integer",
            "title": "Sort Order",
            "description": "Sort order for display",
            "default": 0
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "display_name",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "CategoryResponse"
      },
      "CategoryUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Unique category name"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name",
            "description": "Human-readable display name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Category description"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon",
            "description": "Icon identifier for the category"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "description": "Whether the category is active"
          },
          "sort_order": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sort Order",
            "description": "Sort order for display"
          }
        },
        "type": "object",
        "title": "CategoryUpdate"
      },
      "FlaggedPartSummary": {
        "properties": {
          "part_id": {
            "type": "integer",
            "title": "Part Id"
          },
          "part_name": {
            "type": "string",
            "title": "Part Name"
          },
          "part_brand": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Part Brand"
          },
          "category_id": {
            "type": "integer",
            "title": "Category Id"
          },
          "upvotes": {
            "type": "integer",
            "title": "Upvotes"
          },
          "downvotes": {
            "type": "integer",
            "title": "Downvotes"
          },
          "total_votes": {
            "type": "integer",
            "title": "Total Votes"
          },
          "vote_score": {
            "type": "integer",
            "title": "Vote Score"
          },
          "downvote_ratio": {
            "type": "number",
            "title": "Downvote Ratio"
          },
          "recent_downvotes": {
            "type": "integer",
            "title": "Recent Downvotes"
          },
          "has_reports": {
            "type": "boolean",
            "title": "Has Reports"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "flagged_at": {
            "type": "string",
            "format": "date-time",
            "title": "Flagged At"
          }
        },
        "type": "object",
        "required": [
          "part_id",
          "part_name",
          "part_brand",
          "category_id",
          "upvotes",
          "downvotes",
          "total_votes",
          "vote_score",
          "downvote_ratio",
          "recent_downvotes",
          "has_reports",
          "created_at",
          "flagged_at"
        ],
        "title": "FlaggedPartSummary"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "NewPassword": {
        "properties": {
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "password"
        ],
        "title": "NewPassword"
      },
      "PartCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "price": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price"
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url"
          },
          "category_id": {
            "type": "integer",
            "title": "Category Id"
          },
          "brand": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Brand"
          },
          "part_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Part Number"
          },
          "specifications": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Specifications"
          }
        },
        "type": "object",
        "required": [
          "name",
          "category_id"
        ],
        "title": "PartCreate"
      },
      "PartRead": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "price": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price"
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url"
          },
          "category_id": {
            "type": "integer",
            "title": "Category Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "brand": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Brand"
          },
          "part_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Part Number"
          },
          "specifications": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Specifications"
          },
          "is_verified": {
            "type": "boolean",
            "title": "Is Verified"
          },
          "source": {
            "type": "string",
            "title": "Source"
          },
          "edit_count": {
            "type": "integer",
            "title": "Edit Count"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "category_id",
          "user_id",
          "is_verified",
          "source",
          "edit_count",
          "created_at",
          "updated_at"
        ],
        "title": "PartRead"
      },
      "PartReadWithVotes": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "price": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price"
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url"
          },
          "category_id": {
            "type": "integer",
            "title": "Category Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "brand": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Brand"
          },
          "part_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Part Number"
          },
          "specifications": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Specifications"
          },
          "is_verified": {
            "type": "boolean",
            "title": "Is Verified"
          },
          "source": {
            "type": "string",
            "title": "Source"
          },
          "edit_count": {
            "type": "integer",
            "title": "Edit Count"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "upvotes": {
            "type": "integer",
            "title": "Upvotes",
            "default": 0
          },
          "downvotes": {
            "type": "integer",
            "title": "Downvotes",
            "default": 0
          },
          "total_votes": {
            "type": "integer",
            "title": "Total Votes",
            "default": 0
          },
          "user_vote": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Vote"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "category_id",
          "user_id",
          "is_verified",
          "source",
          "edit_count",
          "created_at",
          "updated_at"
        ],
        "title": "PartReadWithVotes"
      },
      "PartReportCreate": {
        "properties": {
          "reason": {
            "type": "string",
            "title": "Reason"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "reason"
        ],
        "title": "PartReportCreate"
      },
      "PartReportRead": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "part_id": {
            "type": "integer",
            "title": "Part Id"
          },
          "reason": {
            "type": "string",
            "title": "Reason"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "admin_notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Admin Notes"
          },
          "reviewed_by": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reviewed By"
          },
          "reviewed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reviewed At"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "part_id",
          "reason",
          "status",
          "created_at",
          "updated_at"
        ],
        "title": "PartReportRead"
      },
      "PartReportUpdate": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "admin_notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Admin Notes"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "PartReportUpdate"
      },
      "PartReportWithDetails": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "part_id": {
            "type": "integer",
            "title": "Part Id"
          },
          "reason": {
            "type": "string",
            "title": "Reason"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "admin_notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Admin Notes"
          },
          "reviewed_by": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reviewed By"
          },
          "reviewed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reviewed At"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "reporter_username": {
            "type": "string",
            "title": "Reporter Username"
          },
          "part_name": {
            "type": "string",
            "title": "Part Name"
          },
          "reviewer_username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reviewer Username"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "part_id",
          "reason",
          "status",
          "created_at",
          "updated_at",
          "reporter_username",
          "part_name"
        ],
        "title": "PartReportWithDetails"
      },
      "PartUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "price": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price"
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url"
          },
          "category_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Id"
          },
          "brand": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Brand"
          },
          "part_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Part Number"
          },
          "specifications": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Specifications"
          }
        },
        "type": "object",
        "title": "PartUpdate"
      },
      "PartVoteCreate": {
        "properties": {
          "vote_type": {
            "type": "string",
            "title": "Vote Type"
          }
        },
        "type": "object",
        "required": [
          "vote_type"
        ],
        "title": "PartVoteCreate"
      },
      "PartVoteRead": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "part_id": {
            "type": "integer",
            "title": "Part Id"
          },
          "vote_type": {
            "type": "string",
            "title": "Vote Type"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "part_id",
          "vote_type",
          "created_at",
          "updated_at"
        ],
        "title": "PartVoteRead"
      },
      "PartVoteSummary": {
        "properties": {
          "part_id": {
            "type": "integer",
            "title": "Part Id"
          },
          "upvotes": {
            "type": "integer",
            "title": "Upvotes"
          },
          "downvotes": {
            "type": "integer",
            "title": "Downvotes"
          },
          "total_votes": {
            "type": "integer",
            "title": "Total Votes"
          },
          "user_vote": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Vote"
          }
        },
        "type": "object",
        "required": [
          "part_id",
          "upvotes",
          "downvotes",
          "total_votes",
          "user_vote"
        ],
        "title": "PartVoteSummary"
      },
      "SubscriptionResponse": {
        "properties": {
          "tier": {
            "type": "string",
            "title": "Tier",
            "description": "Subscription tier: 'free' or 'premium'"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Subscription status: 'active', 'cancelled', or 'expired'"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At",
            "description": "When the subscription expires"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "tier",
          "status",
          "id",
          "user_id",
          "created_at",
          "updated_at"
        ],
        "title": "SubscriptionResponse"
      },
      "SubscriptionStatus": {
        "properties": {
          "tier": {
            "type": "string",
            "title": "Tier",
            "description": "Current subscription tier"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Current subscription status"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At",
            "description": "When the subscription expires"
          },
          "limits": {
            "additionalProperties": true,
            "type": "object",
            "title": "Limits",
            "description": "Current usage limits"
          },
          "usage": {
            "additionalProperties": true,
            "type": "object",
            "title": "Usage",
            "description": "Current usage statistics"
          }
        },
        "type": "object",
        "required": [
          "tier",
          "status",
          "limits",
          "usage"
        ],
        "title": "SubscriptionStatus"
      },
      "UpgradeRequest": {
        "properties": {
          "tier": {
            "type": "string",
            "title": "Tier",
            "description": "Tier to upgrade to: 'premium'"
          },
          "payment_method": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Method",
            "description": "Payment method identifier"
          }
        },
        "type": "object",
        "required": [
          "tier"
        ],
        "title": "UpgradeRequest"
      },
      "UserCreate": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "username",
          "email",
          "password"
        ],
        "title": "UserCreate"
      },
      "UserRead": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "disabled": {
            "type": "boolean",
            "title": "Disabled"
          },
          "email_verified": {
            "type": "boolean",
            "title": "Email Verified"
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url"
          },
          "is_superuser": {
            "type": "boolean",
            "title": "Is Superuser"
          },
          "is_admin": {
            "type": "boolean",
            "title": "Is Admin"
          }
        },
        "type": "object",
        "required": [
          "id",
          "username",
          "email",
          "disabled",
          "email_verified",
          "is_superuser",
          "is_admin"
        ],
        "title": "UserRead"
      },
      "UserUpdate": {
        "properties": {
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "disabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Disabled"
          },
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password"
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url"
          },
          "current_password": {
            "type": "string",
            "title": "Current Password"
          }
        },
        "type": "object",
        "required": [
          "current_password"
        ],
        "title": "UserUpdate"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}